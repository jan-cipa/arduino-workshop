#ifndef DEMO_CONFIG_H
#define DEMO_CONFIG_H

//############################################################################
// WIFI
//############################################################################
const WifiAPEntry AP_LIST[] = {         // Access points list
    {"arduino-workshop", "test1234"},
    {"ahotherAP", "anotherPass"}
};

//############################################################################
// MQTT
//############################################################################
#define ESP_NAME "ESPMaslostroj"     // ESP8266 host name
#define MQTT_HOST       "workshop.czipis.eu"
#define MQTT_PORT       1883
#define MQTT_USER       "workshop"
#define MQTT_PASSWORD   "gooddata"
#define MQTT_IN_TOPIC   "workshop/JCI/in"
#define MQTT_OUT_TOPIC  "workshop/JCI/out"

//############################################################################
// LEDs
//############################################################################
// uncomment lines 53-54 from ~/Arduino/libraries/FastLED/src/platforms/esp/8266/fastpin_esp8266.h

#define LED_TYPE WS2812B
#define DATA_PIN 10  //GPIO10 = SDD3 - needs manual hack above
#define NUM_LEDS 24
#define COLOR_ORDER GRB
#define BRIGHTNESS 30

uint8_t gHue = 0;  // Used to cycle through rainbow.
uint8_t hueSpeed = 60;  // how fast cycle through rainbow. Lower value cycles faster
uint8_t moveSpeed = 50;  // Higher value moves pixel slower.
uint8_t fadeRate = 60;  // Use higher value to give a fading tail.
int pos;

//############################################################################
// BUTTON
//############################################################################
#define BP A0

//############################################################################
// SDCARD
//############################################################################
#define MAXDIRDEPTH 4
#define ROOT_FOLDER "/mp3/Babis/"

//############################################################################
// AUDIO
//############################################################################
float defaultGain = .3;

//############################################################################
// OLED DISPLAY
//############################################################################
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)

#define LOGO_HEIGHT   64
#define LOGO_WIDTH    54
static const unsigned char PROGMEM logo_bmp[] =
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x0f, 0xf8, 0x00, 0x3f, 0xf8, 0x00, 
0x00, 0x7f, 0xff, 0x01, 0xff, 0xfe, 0x00, 
0x00, 0xff, 0xff, 0xef, 0xff, 0xff, 0x80, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x00, 
0x00, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
0x00, 0x3f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
0x00, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0x00, 
0x00, 0x0f, 0xff, 0xc2, 0xff, 0xf0, 0x00, 
0x00, 0x03, 0xfc, 0x00, 0x3f, 0xe0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

/*
 * PIN CONNECTIONS
 * 
  OLED DISPLAY
  ------------
  GND -> GND
  VDD -> 3.3V
  SCK -> D1
  SDA -> D2

  SDCARD
  ------
  GND  -> GND
  MISO -> D6
  CLK  -> D5
  MOSI -> D7
  CS   -> D4
  3v3  -> 3.3V

  AUDIO
  -----
  LRC  -> D4
  BCLK -> D8
  DIN  -> RX
  GAIN -> not connected
  SD   -> not connected
  GND  -> GND
  VIN  -> 5V
  +    -> SPEAKER WHITE
  -    -> SPEAKER GREEN  

  PUSH BUTTON
  -----------
  BLUE  -> A0
  WHITE -> 3.3V
  RED   -> A0
  BLACK -> GND

  LED RING
  --------
  GREEN -> SD3
  WHITE -> 5V
  BLACK -> GND
*/

#endif //DEMO_CONFIG_H
